'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = ThemeProviderFactory;

var _objects = require('shallow-equal/objects');

var _objects2 = _interopRequireDefault(_objects);

var _objectEach = require('fast-loops/lib/objectEach');

var _objectEach2 = _interopRequireDefault(_objectEach);

var _createTheme = require('./createTheme');

var _createTheme2 = _interopRequireDefault(_createTheme);

var _themeChannel = require('./themeChannel');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function ThemeProviderFactory(BaseComponent, renderChildren, statics) {
  var ThemeProvider = function (_BaseComponent) {
    _inherits(ThemeProvider, _BaseComponent);

    function ThemeProvider(props, context) {
      _classCallCheck(this, ThemeProvider);

      var _this = _possibleConstructorReturn(this, (ThemeProvider.__proto__ || Object.getPrototypeOf(ThemeProvider)).call(this, props, context));

      var previousTheme = !props.overwrite && _this.context[_themeChannel.THEME_CHANNEL];
      _this.theme = (0, _createTheme2.default)(props.theme, previousTheme);
      return _this;
    }

    _createClass(ThemeProvider, [{
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        if (!(0, _objects2.default)(this.props.theme, nextProps.theme)) {
          this.theme.update(nextProps.theme);
        }
      }
    }, {
      key: 'getChildContext',
      value: function getChildContext() {
        return _defineProperty({}, _themeChannel.THEME_CHANNEL, this.theme);
      }
    }, {
      key: 'render',
      value: function render() {
        return renderChildren(this.props.children);
      }
    }]);

    return ThemeProvider;
  }(BaseComponent);

  if (statics) {
    (0, _objectEach2.default)(statics, function (value, key) {
      ThemeProvider[key] = value;
    });
  }

  return ThemeProvider;
}