'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rehydrate;

var _arrayEach = require('fast-loops/lib/arrayEach');

var _arrayEach2 = _interopRequireDefault(_arrayEach);

var _felaUtils = require('fela-utils');

var _rehydrateSupportRules = require('./rehydrateSupportRules');

var _rehydrateSupportRules2 = _interopRequireDefault(_rehydrateSupportRules);

var _rehydrateRules = require('./rehydrateRules');

var _rehydrateRules2 = _interopRequireDefault(_rehydrateRules);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// rehydration (WIP)
// TODO: static, keyframe, font
function rehydrate(renderer) {
  (0, _arrayEach2.default)(document.querySelectorAll('[data-fela-type]'), function (node) {
    var rehydrationAttribute = node.getAttribute('data-fela-rehydration') || -1;
    var rehydrationIndex = parseInt(rehydrationAttribute);

    // skip rehydration if no rehydration index is set
    // this index is set to -1 if something blocks rehydration
    if (rehydrationIndex !== -1) {
      var type = node.getAttribute('data-fela-type') || '';
      var media = node.getAttribute('media') || '';
      var support = node.getAttribute('data-fela-support');
      var css = node.textContent;

      renderer.uniqueRuleIdentifier = rehydrationIndex;

      if (type === _felaUtils.RULE_TYPE) {
        if (support) {
          (0, _rehydrateSupportRules2.default)(css, media, renderer.cache);
        } else {
          (0, _rehydrateRules2.default)(css, media, '', renderer.cache);
        }
      }
    }
  });
}