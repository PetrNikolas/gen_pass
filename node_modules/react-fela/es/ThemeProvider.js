function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { Component, Children } from 'react';
import { ThemeProviderFactory, THEME_CHANNEL } from 'fela-bindings';
import PropTypes from 'prop-types';

export default ThemeProviderFactory(Component, function (children) {
  return Children.only(children);
}, {
  propTypes: {
    theme: PropTypes.object.isRequired,
    overwrite: PropTypes.bool
  },
  childContextTypes: _defineProperty({}, THEME_CHANNEL, PropTypes.object),
  contextTypes: _defineProperty({}, THEME_CHANNEL, PropTypes.object),
  defaultProps: {
    overwrite: false
  }
});